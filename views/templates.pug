.gl_keep.template
  .urls
    .input-group.urls-container
      .input-group-btn
        .btn-group.btn-group-sm
          button.btn.btn-godbolt.btn-sm.dropdown-toggle(
          data-toggle="dropdown" type="button" aria-haspopup="true" aria-expanded="false")
            span.current Short
            span.caret
          ul.dropdown-menu.sources
            li: a(href="#" data-bind="Short") Short
            li: a(href="#" data-bind="Full") Full
            li: a(href="#" data-bind="Embed") Embed
            li: a(href="#" data-bind="Embed (RO)") Embed (read only)
      input.form-control.input-sm.permalink(
      type="text" placeholder="Loading" readonly size="1024")
      span.input-group-btn
        button.btn.btn-godbolt.btn-sm.clippy(
        type="button" data-clipboard-target=".popover .permalink"
        title="Copy to clipboard")
          span.glyphicon.glyphicon-copy(style="width:13px")
    if sharingEnabled
      .socialsharing

  #codeEditor
    .top-bar.btn-toolbar(role="toolbar")
      include font-size.pug
      .btn-group.btn-group-sm
        button.btn.btn-godbolt.btn-sm.load-save(title="Load or save text")
          span.glyphicon.glyphicon-floppy-disk
          span.hideable &nbsp;Save/Load
      if !embedded
        .btn-group.btn-group-sm.dropdown
          button.btn.btn-godbolt.btn-sm.dropdown-toggle.add-pane(type="button" title="Add a new pane" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false")
            span.glyphicon.glyphicon-plus
            span.hideable &nbsp;Add new...
            | #[b.caret]
          div.dropdown-menu.pane-dropdown(aria-labelledby="add-pane")
            button.btn.btn-godbolt.btn-sm.add-compiler(title="Add a new compiler for this source" aria-label="Compiler")
              span.glyphicon.glyphicon-open
              | &nbsp;Compiler
            button.btn.btn-godbolt.btn-sm.conformance(title="Add a new conformance view" aria-label="Conformance view")
              span.glyphicon.glyphicon-list-alt
              | &nbsp;Conf. view
      .btn-group.btn-group-sm.pull-right
        select.change-language(title="Change this editor's (and associated panels) language" disabled=embedded && readOnly)
    .monaco-placeholder

  #compiler
    .top-bar.btn-toolbar(role="toolbar")
      table
        tr
          td: select.compiler-picker(placeholder="Select a compiler...")
          td: input.options.form-control(type="text" placeholder="Compiler options..." size="256" autocorrect="off" autocapitalize="off" spellcheck="false")
          td: span.glyphicon.glyphicon-info-sign.prepend-options
      if !embedded
        include font-size.pug
      div.btn-group.btn-group-sm.filters(data-toggle="buttons")
        // TODO store these in the app and drive from there?
        // Make a dropdown? With more options?
        button.btn.btn-godbolt.btn-sm(title="Compile to binary and disassemble the output" data-bind="binary")
          span 11010
        button.btn.btn-godbolt.btn-sm(title="Execute the binary" data-bind="execute")
          span ./a.out
        button.btn.btn-godbolt.btn-sm.active.nonbinary(title="Filter unused labels from the output" data-bind="labels")
          span .LX0:
        button.btn.btn-godbolt.btn-sm.active.nonbinary(title="Filter all assembler directives from the output" data-bind="directives")
          span .text
        button.btn.btn-godbolt.btn-sm.active.nonbinary(title="Remove all lines which are only comments from the output" data-bind="commentOnly")
          span //
        button.btn.btn-godbolt.btn-sm(title="Trim intra-line whitespace" data-bind="trim")
          span \s+
        button.btn.btn-godbolt.btn-sm.active(title="Output disassembly in Intel syntax" data-bind="intel")
          span Intel
        button.btn.btn-godbolt.btn-sm.active(title="Demangle output" data-bind="demangle")
          span Demangle
        if embedded
          include font-size.pug
      .btn-group.btn-group-sm
        button.btn.btn-godbolt.btn-sm.show-libs.dropdown-toggle
          span.glyphicon.glyphicon-book(title="Include libs")
          span.hideable &nbsp;Libraries
          | #[b.caret]
      if !embedded
        .btn-group.btn-group-sm.dropdown
          button.btn.btn-godbolt.btn-sm.dropdown-toggle.add-pane(type="button" title="Add a new pane" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false")
            span.glyphicon.glyphicon-plus
            span.hideable &nbsp;Add new...
            | #[b.caret]
          div.dropdown-menu.pane-dropdown(aria-labelledby="add-pane")
            button.btn.btn-godbolt.btn-sm.add-compiler(title="Clone this compiler window (click or drag)")
              span.glyphicon.glyphicon-new-window
              | &nbsp;Clone compiler
            button.btn.btn-godbolt.btn-sm.view-optimization(title="Show optimization output")
              span.glyphicon.glyphicon-scale
              | &nbsp;Optimization output
            button.btn.btn-godbolt.btn-sm.view-ast(title="Show AST output")
              span.glyphicon.glyphicon-tree-deciduous
              | &nbsp;AST output
            button.btn.btn-godbolt.btn-sm.view-gccdump(title="Show Tree/RTL dump (GCC only)")
              span.glyphicon.glyphicon-tree-conifer
              | &nbsp;GCC Tree/RTL output
            button.btn.btn-godbolt.btn-sm.view-cfg(title="Show Graph Output")
              span.glyphicon.glyphicon-lamp
              | &nbsp;Graph output
    .monaco-placeholder
    .bottom-bar
      if !embedded
        .btn-group.btn-group-sm
          button.btn.btn-godbolt.btn-sm.output-btn
            span.glyphicon.glyphicon-alert.status
            | &nbsp;Output
            span.output-count
              | &nbsp;(
              span.text-count
                | 0
              | /
              span.err-count
                | 0
              | )
        span.full-compiler-name
        span.compile-time
        button.btn.btn-godbolt.btn-sm.clear-cache(title="Clear cache & recompile")
          span.glyphicon.glyphicon-refresh

  #compiler-output
    .top-bar.btn-toolbar.options-toolbar(role="toolbar")
      include font-size
      div.btn-group.btn-group-sm.options(data-toggle="buttons")
        button.btn.btn-godbolt.btn-sm.wrap-lines(title="Wrap lines" data-bind="wrap")
          | Wrap lines
    pre.content

  #diff
    .top-bar.tn-toolbar(role="toolbar")
      table
        tr
          td.header-fontscale
            include font-size.pug
          td: select.diff-picker.lhs(placeholder="Select compiler output...")
          td: select.diff-picker.rhs(placeholder="Select compiler output...")
    .monaco-placeholder

  #opt
    .top-bar.btn-toolbar(role="toolbar")
      include font-size.pug
    .monaco-placeholder

  #ast
    .top-bar.btn-toolbar(role="toolbar")
      include font-size.pug
    .monaco-placeholder

  #gccdump
    .top-bar.btn-toolbar(role="toolbar")
      table
        tr: td: select.gccdump-pass-picker(placeholder="Select a pass...")
      include font-size
      div.btn-group.btn-group-sm.dump-filters(data-toggle="buttons")
          button.btn.btn-godbolt.btn-sm.active(title="Tree" data-bind="treeDump")
            span Tree pass
          button.btn.btn-godbolt.btn-sm.active(title="RTL" data-bind="rtlDump")
            span RTL pass
    .monaco-placeholder

  #cfg
    .top-bar.btn-toolbar.cfg-toolbar(role="toolbar")
      table
        tr
          td: select.function-picker
      div.btn-group.btn-group-sm.options(data-toggle="buttons")
        button.btn.btn-godbolt.btn-sm.toggle-navigation(title="Toggle navigation buttons" data-bind="navigation")
          span Navigation
        button.btn.btn-godbolt.btn-sm.toggle-physics(title="Toggle physics to nodes" data-bind="physics")
          span Physics
    div.graph-placeholder

  #conformance
    .top-bar.tn-toolbar(role="toolbar")
      .btn-group.btn-group-sm
        button.btn.btn-godbolt.btn-sm.add-compiler(title="Add compiler")
          span.glyphicon.glyphicon-plus-sign
          span.hideable &nbsp;Add new compiler
    .conformance-wrapper
      table.compiler-list

  #compiler-selector
    table
      tr.compiler-row
        td
          span.status.glyphicon
        td
          select.compiler-picker(placeholder="Select a compiler...")
        td
          input.options.form-control(type="text" size="256" placeholder="Compiler options..." autocorrect="off" autocapitalize="off" spellcheck="false")
        td
          span.glyphicon.glyphicon-info-sign.prepend-options
        td
          button.close(aria-label="Close")
            span(aria-hidden="true")
              | &times;

  #libs-dropdown
    .no-libs
      p No libs configured for this language yet.
      a(target="_blank" rel="noopener noreferrer" href="https://github.com/mattgodbolt/compiler-explorer/issues/new")
        | You can suggest us one at any time&nbsp;
        sup.glyphicon.glyphicon-new-window.opens-new-window(title="Opens in a new window")

  #share-item(data-logo-twitter=require("Twitter_Logo_WhiteOnBlue.svg") data-logo-reddit=require("Reddit_Icon.png"))
    a.share-item(href="#" rel="noopener noreferrer" target="_blank")
      img.share-item-logo(src="#" alt="" width="20px" height="20px")
      span.share-item-text
