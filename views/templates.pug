.gl_keep.template
  .urls
    .input-group.urls-container
      .input-group-btn
        .btn-group.btn-group-sm
          button.btn.btn-light.btn-sm.dropdown-toggle(
          data-toggle="dropdown" type="button" aria-haspopup="true" aria-expanded="false")
            span.current Short
            span.caret
          ul.dropdown-menu.sources
            li: a(href="javascript:;" data-bind="Short") Short
            li: a(href="javascript:;" data-bind="Full") Full
            li: a(href="javascript:;" data-bind="Embed") Embed
            li: a(href="javascript:;" data-bind="Embed (RO)") Embed (read only)
      input.form-control.input-sm.permalink(
      type="text" placeholder="Loading" readonly size="1024")
      span.input-group-btn
        button.btn.btn-light.btn-sm.clippy(
        type="button" data-clipboard-target=".popover .permalink"
        title="Copy to clipboard")
          span.fa.fa-clipboard(style="width:13px")
    if sharingEnabled
      .socialsharing

  #codeEditor
    .top-bar.btn-toolbar.bg-light(role="toolbar" aria-label="Editor toolbar")
      include font-size.pug
      .btn-group.btn-group-sm(role="group" aria-label="Editor settings")
        button.btn.btn-light.load-save(title="Load or save text" aria-label="Load or save text")
          span.fa.fa-save
          span.hideable &nbsp;Save/Load
        button.dropdown-toggle.btn.btn-light.add-pane(type="button" title="Add a new pane" aria-label="Add a new pane" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false")
          span.fa.fa-plus
          span.hideable &nbsp;Add new...
          | #[b.caret]
        .dropdown-menu
          button.dropdown-item.btn.btn-sm.btn-light.add-compiler(title="Add a new compiler for this source" aria-label="New compiler")
            span.fa.fa-cogs
            | &nbsp;Compiler
          button.dropdown-item.btn.btn-sm.btn-light.conformance(title="Add a new conformance view" aria-label="New conformance view")
            span.fa.fa-list
            | &nbsp;Conformance view
      .btn-group.btn-group-sm(role="group" aria-label="Editor language")
        select.change-language(title="Change this editor's (and associated panels) language" disabled=embedded && readOnly)
    .monaco-placeholder

  #compiler
    .top-bar.btn-toolbar.bg-light(role="toolbar")
      .btn-group.btn-group-sm(role="group" aria-label="Compiler picker")
        select.compiler-picker(placeholder="Select a compiler...")
        .input-group.mb-auto
          .input-group-prepend.prepend-options(style="cursor: help;")
            span.input-group-text
              | ...
          input.options.form-control(type="text" placeholder="Compiler options..." size="256" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false")
      include font-size
      .btn-group.btn-group-sm.filters(role="group" aria-label="Compiler filters")
        .button-checkbox
          button.btn.btn-light.btn-sm(type="button" title="Compile to binary and disassemble the output" data-bind="binary" aria-pressed="false")
            span 11010
          input.d-none(type="checkbox")
        .button-checkbox
          button.nav-link-sm.btn.btn-light.btn-sm(type="button" title="Execute the binary" data-bind="execute" aria-pressed="false")
            span ./a.out
          input.d-none(type="checkbox")
        .button-checkbox
          button.btn.btn-light.btn-sm.active.nonbinary(type="button" title="Filter unused labels from the output" data-bind="labels" aria-pressed="true")
            span .LX0:
          input.d-none(type="checkbox" checked=true)
        .button-checkbox
          button.btn.btn-light.btn-sm.active.nonbinary(type="button" title="Filter all assembler directives from the output" data-bind="directives" aria-pressed="true")
            span .text
          input.d-none(type="checkbox" checked=true)
        .button-checkbox
          button.btn.btn-light.btn-sm.active.nonbinary(type="button" title="Remove all lines which are only comments from the output" data-bind="commentOnly" aria-pressed="true")
            span //
          input.d-none(type="checkbox" checked=true)
        .button-checkbox
          button.btn.btn-light.btn-sm(type="button" title="Trim intra-line whitespace" data-bind="trim" aria-pressed="false")
            span \s+
          input.d-none(type="checkbox")
        .button-checkbox
          button.btn.btn-light.btn-sm.active(type="button" title="Output disassembly in Intel syntax" data-bind="intel" aria-pressed="true")
            span Intel
          input.d-none(type="checkbox" checked=true)
        .button-checkbox
          button.btn.btn-light.btn-sm.active(type="button" title="Demangle output" data-bind="demangle" aria-pressed="true")
            span Demangle
          input.d-none(type="checkbox" checked=true)
      .btn-group.btn-group-sm(role="group" aria-label="Compiler additions")
        button.btn.btn-light.btn-sm.show-libs.dropdown-toggle
          span.fas.fa-book(title="Include libs")
          span.hideable &nbsp;Libraries
          | #[b.caret]
        button.btn.btn-light.btn-sm.dropdown-toggle.add-pane(type="button" title="Add a new pane" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" aria-label="Add new element for this compiler")
          span.fas.fa-plus
          span.hideable &nbsp;Add new...
          | #[b.caret]
        .dropdown-menu.dropdown-menu-right
          button.dropdown-item.btn.btn-light.btn-sm.add-compiler(title="Clone this compiler window (click or drag)")
            span.far.fa-clone
            | &nbsp;Clone compiler
          button.dropdown-item.btn.btn-light.btn-sm.view-optimization(title="Show optimization output")
            span.fas.fa-weight
            | &nbsp;Optimization output
          button.dropdown-item.btn.btn-light.btn-sm.view-ast(title="Show AST output")
            span.fas.fa-leaf
            | &nbsp;AST output
          button.dropdown-item.btn.btn-light.btn-sm.view-gccdump(title="Show Tree/RTL dump (GCC only)")
            span.fas.fa-tree
            | &nbsp;GCC Tree/RTL output
          button.dropdown-item.btn.btn-light.btn-sm.view-cfg(title="Show Graph Output")
            span.fas.fa-exchange-alt
            | &nbsp;Graph output

    .monaco-placeholder
    .bottom-bar
      if !embedded
        .btn-group.btn-group-sm
          button.btn.btn-light.btn-sm.output-btn
            span.fas.fa-receipt.status
            | &nbsp;Output
            span.output-count
              | &nbsp;(
              span.text-count
                | 0
              | /
              span.err-count
                | 0
              | )
        span.full-compiler-name
        span.compile-time
        button.btn.btn-light.btn-sm.clear-cache(title="Clear cache & recompile")
          span.fas.fa-redo

  #compiler-output
    .top-bar.btn-toolbar.options-toolbar.bg-light(role="toolbar")
      include font-size
      .btn-group.btn-group-sm.options(role="group" aria-label="Output options")
        .button-checkbox
          button.btn.btn-light.btn-sm.wrap-lines(type="button" title="Wrap lines" data-bind="wrap" aria-pressed="false" aria-label="Wrap lines")
            span Wrap lines
          input.d-none(type="checkbox" checked=false)
    pre.content

  #diff
    .top-bar.btn-toolbar.bg-light(role="toolbar")
      .form-row
        .col-1.header-fontscale
          include font-size.pug
        .col-auto
          select.diff-picker.lhs(placeholder="Select compiler...")
        .col-auto
          select.diff-picker.rhs(placeholder="Select compiler...")
    .monaco-placeholder

  #opt
    .top-bar.btn-toolbar(role="toolbar")
      include font-size.pug
    .monaco-placeholder

  #ast
    .top-bar.btn-toolbar(role="toolbar")
      include font-size.pug
    .monaco-placeholder

  #gccdump
    .top-bar.btn-toolbar(role="toolbar")
      table
        tr: td: select.gccdump-pass-picker(placeholder="Select a pass...")
      include font-size
      div.btn-group.btn-group-sm.dump-filters(data-toggle="buttons")
          button.btn.btn-light.btn-sm.active(title="Tree" data-bind="treeDump")
            span Tree pass
          button.btn.btn-light.btn-sm.active(title="RTL" data-bind="rtlDump")
            span RTL pass
    .monaco-placeholder

  #cfg
    .top-bar.btn-toolbar.cfg-toolbar(role="toolbar")
      table
        tr
          td: select.function-picker
      div.btn-group.btn-group-sm.options(data-toggle="buttons")
        button.btn.btn-light.btn-sm.toggle-navigation(title="Toggle navigation buttons" data-bind="navigation")
          span Navigation
        button.btn.btn-light.btn-sm.toggle-physics(title="Toggle physics to nodes" data-bind="physics")
          span Physics
    div.graph-placeholder

  #conformance
    .top-bar.btn-toolbar.options-toolbar.bg-light(role="toolbar")
      ul.nav.nav-pills.nav-left.bg-light.mr-auto
        li.nav-item
          button.nav-link.btn.btn-light.btn-sm.add-compiler(title="Add compiler")
            span.fas.fa-plus
            span.hideable &nbsp;Add compiler
        li.nav-item
          button.nav-link.btn.btn-light.btn-sm.show-libs.dropdown-toggle(title="Include libs" aria-pressed="false")
            span.fas.fa-book
            span.hideable &nbsp;Libraries
            | #[b.caret]

    .conformance-wrapper
      table.compiler-list

  #compiler-selector
    .form-row
      .col-auto
        select.compiler-picker(placeholder="Select a compiler...")
      .col
        .input-group.mb-auto
          .input-group-prepend.prepend-options(style="cursor: help;")
            span.input-group-text
              | ...
          input.options.form-control(type="text" placeholder="Compiler options..." size="256" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false")
      .col-1
        span.btn.btn-light.btn-sm.status
        button.fas.fa-times.close(aria-label="Close" title="Close")
        button.fas.fa-share.close.extract-compiler(aria-label="Pop compiler" title="Show compiler")

  #libs-dropdown
    .no-libs
      p No libs configured for this language yet.
      a(target="_blank" rel="noopener noreferrer" href="https://github.com/mattgodbolt/compiler-explorer/issues/new")
        | You can suggest us one at any time&nbsp;
        sup.fas.fa-external-link-alt.opens-new-window(title="Opens in a new window")

  #share-item
    a.share-item(href="javascript:;" rel="noopener noreferrer" target="_blank")
      span.share-item-text
